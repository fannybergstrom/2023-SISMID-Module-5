"0","##############################################################################"
"0","# Function to compute the derivative of the ODE system for SIR Model:"
"0","# S(t): number of susceptible"
"0","# I(t): number of infectives"
"0","# ODE:"
"0","# dS(t) / dt = -beta / N * S(t) * I(t)"
"0","# dI(t) / dt = beta / N * S(t) * I(t) - gamma * I(t)"
"0","#"
"0","#  t - time"
"0","#  y - current state vector of the ODE at time t"
"0","#  parms - Parameter vector used by the ODE system"
"0","#"
"0","# Returns:"
"0","#  list containing dS(t)/dt and dI(t)/dt"
"0","##############################################################################"
"0","# Parameter values"
"0","gamma <- 0.25"
"0","beta <- 0.75"
"0","# We assume a closed population of size"
"0","times <- seq(0, 100, length = 1000)"
"0",""
"0","deter_sir <- function(t, y, parms) {"
"0","  beta <- parms[1]"
"0","  gamma <- parms[2]"
"0","  N <- parms[3]"
"0","  S <- y[1]"
"0","  I <- y[2]"
"0","  return(list(c("
"0","    S = -(beta * S * I) / N, # dS(t)/dt"
"0","    ##########################"
"0","    # YOUR CODE HERE"
"0","    ##########################"
"0","    # same for dI(t)/dt"
"0","    I = beta / N * S * I - gamma * I"
"0","  )))"
"0","}"
