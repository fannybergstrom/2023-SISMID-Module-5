"0","##############################################################################"
"0","# Function of R_0 solving for tau numericallyï¼š"
"0","#  R_0 - reproduction number"
"0","#  tau - final size"
"0","#  Return: tau"
"0","##############################################################################"
"0",""
"0","tau <- function(R_0) {"
"0","  final_eq <- function(tau) {"
"0","    ##########################"
"0","    # give the expression here"
"0","    ##########################"
"0","    1 - tau - exp(-R_0 * tau)"
"0","  }"
"0","  """
"0","  Note: This final size equation is always a solution tau = 0."
"0","  When R_0 <=1, it gives only one solution tau = 0;"
"0","  if R_0 > 1, then there are two solutions."
"0","  """
"0","  result1 <- uniroot(final_eq, lower = 0, upper = 1)$root"
"0","  result2 <- uniroot(final_eq, lower = 1e-12, upper = 1, extendInt = ""yes"")$root"
"0",""
"0","  # fill in here (minimum or maximum of result1 and 2 or others?)"
"0","  result <- max(result1, result2)"
"0",""
"0","  return(result)"
"0","}"
