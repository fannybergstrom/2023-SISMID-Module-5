"0","##############################################################################"
"0","# Plot the overall final size of R_0 in [0,5]"
"0","# in three cases: r = 0.3, 0.5, 0.7"
"0","##############################################################################"
"0","# Create a vector of 10000 R0 values between 0.00001 and 5"
"0","R0_vec <- seq(from = 0, to = 5, length.out = 10000)"
"0","df_tau_r <- data.frame(R0 = R0_vec)"
"0",""
"0","# Create a vector of the corresponding values of tau for r = 0.3"
"0","tau_vec <- as.vector(10000)"
"0","r <- 0.3"
"0","for (i in 1:10000) {"
"0","  R0 <- R0_vec[i]"
"0","  tau_vec[i] <- tau_overall(R_0 = R0, r = r)"
"0","}"
"0","df_tau_r <- cbind(df_tau_r, overall_infected.3 = tau_vec)"
"0",""
"0","# Create a vector of the corresponding values of tau for r = 0.5"
"0","tau_vec <- as.vector(10000)"
"0","r <- 0.5"
"0","for (i in 1:10000) {"
"0","  R0 <- R0_vec[i]"
"0","  tau_vec[i] <- tau_overall(R_0 = R0, r = r)"
"0","}"
"0","df_tau_r <- cbind(df_tau_r, overall_infected.5 = tau_vec)"
"0",""
"0","##########################"
"0","# YOUR CODE HERE"
"0","##########################"
"0","# As in the codes for r = 0.3 and 0.5, create a vector of the corresponding "
"0","# values of tau for r = 0.7, and consider it as the column in the data frame "
"0","# ""df_tau_r"" , with name ""overall_infected.7""."
"0",""
"0","# Create a vector of the corresponding values of tau for r = 0.7"
"0","tau_vec <- as.vector(10000)"
"0","r <- 0.7"
"0","for (i in 1:10000) {"
"0","  R0 <- R0_vec[i]"
"0","  tau_vec[i] <- tau_overall(R_0 = R0, r = r)"
"0","}"
"0","df_tau_r <- cbind(df_tau_r, overall_infected.7 = tau_vec)"
"0",""
"0","# Create a plot of tau against R0 in three cases"
"0","ggplot(df_tau_r) +"
"0","  geom_line(aes(x = R0, y = overall_infected.3, color = ""r = 0.3"")) +"
"0","  geom_line(aes(x = R0, y = overall_infected.5, color = ""r = 0.5"")) +"
"0","  geom_line(aes(x = R0, y = overall_infected.7, color = ""r = 0.7"")) +"
"0","  scale_color_discrete(name = ""immue fraction"") +"
"0","  labs(title = "" Assuming there is a fraction r of initially immune "") +"
"0","  ylab(""Overall fraction infected"") +"
"0","  xlab(expression(""R""[0])) +"
"0","  ylim(0, 1) + theme_minimal()"
